/** Towers of Hanoi Problem WITH recursion
 *  TowersOfHanoi.cpp
 *     
 *  Fall, 2011
 *
 *  Problem: Towers of Hanoi
 *          You are given three towers a, b, and c. We start with n rings on tower a
 *			and we need to transfer them to tower b subject to the following
 *			restrictions:
 *			1. We can only move one ring at a time, and
 *			2. We may never put a larger numbered ring on top of a smaller numbered
 *			one.
 *			There are always 3 towers. Your program will prompt the user for the
 *			number of rings.
 *
 *  For More Description of TOH Problem:
 *     Check File: 'problem statement for non recursive tower of hanoi.pdf'
 *      
 *  Input: 
 *     Enter the number of rings you want to move:
 *
 *  OutPut Format:
 *     Set of Autogenerated Instructions produced by the program by using non recursive algorithm to 
 *     transfer rings from one tower to the other two towers
 *
 * @Compiler version on which Program is Last Run before uploading to Github: Dev-C++ 5.4.1, Date: 1st July, 2013   
 * @author Gurpreet Singh
 */

#include<iostream>
#include <cstdlib>
using namespace std;
void Move(char F, char T, char E, int n)     // recursive function
{
     if(n==1){
         cout<<"Transfer Ring "<<n<<" from Tower "<<F<<" to Tower "<<T<<endl;
         return;
       } 
     Move(F,E,T,n-1);
     cout<<"Transfer Ring "<<n<<" from Tower "<<F<<" to Tower "<<T<<endl;
     Move(E,T,F,n-1);    
     return;
}
int main()
{   int N;        // Number of rings
    char A='a',B='b', C='c';
    cout<<"Enter the number of rings : ";
    cin>>N;
    Move(A,B,C,N);
    
    
    return 0;
}



